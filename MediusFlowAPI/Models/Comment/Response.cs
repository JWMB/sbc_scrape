using System;
using System.Collections.Generic;
using System.Text;

namespace MediusFlowAPI.Models.Comment
{
	// <auto-generated />
	//
	// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
	//
	//    using QuickType;
	//
	//    var response = Response.FromJson(jsonString);
		using System;
		using System.Collections.Generic;

		using System.Globalization;
		using Newtonsoft.Json;
		using Newtonsoft.Json.Converters;

		public partial class Response
		{
			[JsonProperty("$type")]
			public string Type { get; set; }

			[JsonProperty("Id")]
			public long Id { get; set; }

			[JsonProperty("Text")]
			public string Text { get; set; }

			[JsonProperty("Author")]
			public string Author { get; set; }

			[JsonProperty("CreatedDate")]
			public string CreatedDate { get; set; }
		}

		public partial class Response
		{
			public static Response[] FromJson(string json) => JsonConvert.DeserializeObject<Response[]>(json, Converter.Settings);
		}

		public static class Serialize
		{
			public static string ToJson(this Response[] self) => JsonConvert.SerializeObject(self, Converter.Settings);
		}

		internal static class Converter
		{
			public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
			{
				MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
				DateParseHandling = DateParseHandling.None,
				Converters =
			{
				new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
			},
			};
		}
}
